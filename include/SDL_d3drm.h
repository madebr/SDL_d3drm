#ifndef SDL_D3DRM_H
#define SDL_D3DRM_H

#include "SDL_ddraw.h"

typedef struct IDirect3DRM *LPDIRECT3DRM, **LPLPDIRECT3DRM;

#include "SDL_d3drmobj.h"
#include "SDL_winglue.h"

SDL_DEFINE_GUID(SDL_IID_IDirect3DRM,    0x2bc49361, 0x8327, 0x11cf, 0xac, 0x4a, 0x0, 0x0, 0xc0, 0x38, 0x25, 0xa1);
SDL_DEFINE_GUID(SDL_IID_IDirect3DRM2,   0x4516ecc8, 0x8f20, 0x11d0, 0x9b, 0x6d, 0x00, 0x00, 0xc0, 0x78, 0x1b, 0xc3);
SDL_DEFINE_GUID(SDL_IID_IDirect3DRM3,   0x4516ec83, 0x8f20, 0x11d0, 0x9b, 0x6d, 0x00, 0x00, 0xc0, 0x78, 0x1b, 0xc3);

#define SDL_WIN_TYPES(itype, ptype) \
    typedef struct itype SDL_FAR *LP##ptype, SDL_FAR **LPLP##ptype
SDL_WIN_TYPES(IDirect3DRM, DIRECT3DRM);
SDL_WIN_TYPES(IDirect3DRM2, DIRECT3DRM2);
SDL_WIN_TYPES(IDirect3DRM3, DIRECT3DRM3);

#define SDL_INTERFACE IDirect3DRM
SDL_DECLARE_INTERFACE_(IDirect3DRM, IUnknown)
{
    SDL_IUNKNOWN_METHODS(SDL_PURE);

    SDL_STDMETHOD(CreateObject)             (SDL_THIS_ SDL_REFCLSID rclsid, SDL_LPUNKNOWN pUnkOuter, SDL_REFIID riid, SDL_LPVOID SDL_FAR* ppv) SDL_PURE;
    SDL_STDMETHOD(CreateFrame)              (SDL_THIS_ LPDIRECT3DRMFRAME, LPDIRECT3DRMFRAME *) SDL_PURE;
    SDL_STDMETHOD(CreateMesh)               (SDL_THIS_ LPDIRECT3DRMMESH *) SDL_PURE;
    SDL_STDMETHOD(CreateMeshBuilder)        (SDL_THIS_ LPDIRECT3DRMMESHBUILDER *) SDL_PURE;
    SDL_STDMETHOD(CreateFace)               (SDL_THIS_ LPDIRECT3DRMFACE *) SDL_PURE;
    SDL_STDMETHOD(CreateAnimation)          (SDL_THIS_ LPDIRECT3DRMANIMATION *) SDL_PURE;
    SDL_STDMETHOD(CreateAnimationSet)       (SDL_THIS_ LPDIRECT3DRMANIMATIONSET *) SDL_PURE;
    SDL_STDMETHOD(CreateTexture)            (SDL_THIS_ LPD3DRMIMAGE, LPDIRECT3DRMTEXTURE *) SDL_PURE;
    SDL_STDMETHOD(CreateLight)              (SDL_THIS_ D3DRMLIGHTTYPE, D3DCOLOR, LPDIRECT3DRMLIGHT *) SDL_PURE;
    SDL_STDMETHOD(CreateLightRGB)           (SDL_THIS_ D3DRMLIGHTTYPE, D3DVALUE, D3DVALUE, D3DVALUE, LPDIRECT3DRMLIGHT *) SDL_PURE;
    SDL_STDMETHOD(CreateMaterial)           (SDL_THIS_ D3DVALUE, LPDIRECT3DRMMATERIAL *) SDL_PURE;
    SDL_STDMETHOD(CreateDevice)             (SDL_THIS_ SDL_DWORD, SDL_DWORD, LPDIRECT3DRMDEVICE *) SDL_PURE;
    SDL_STDMETHOD(CreateDeviceFromSurface)  (SDL_THIS_ SDL_LPGUID lpGUID, LPDIRECTDRAW lpDD, LPDIRECTDRAWSURFACE lpDDSBack, LPDIRECT3DRMDEVICE *) SDL_PURE;
    SDL_STDMETHOD(CreateDeviceFromD3D)      (SDL_THIS_ LPDIRECT3D lpD3D, LPDIRECT3DDEVICE lpD3DDev, LPDIRECT3DRMDEVICE *) SDL_PURE;
    SDL_STDMETHOD(CreateDeviceFromClipper)  (SDL_THIS_ LPDIRECTDRAWCLIPPER lpDDClipper, SDL_LPGUID lpGUID, int width, int height, LPDIRECT3DRMDEVICE *) SDL_PURE;
    SDL_STDMETHOD(CreateTextureFromSurface) (SDL_THIS_ LPDIRECTDRAWSURFACE lpDDS, LPDIRECT3DRMTEXTURE *) SDL_PURE;
    SDL_STDMETHOD(CreateShadow)             (SDL_THIS_ LPDIRECT3DRMVISUAL, LPDIRECT3DRMLIGHT, D3DVALUE px, D3DVALUE py, D3DVALUE pz, D3DVALUE nx, D3DVALUE ny, D3DVALUE nz, LPDIRECT3DRMVISUAL *) SDL_PURE;
    SDL_STDMETHOD(CreateViewport)           (SDL_THIS_ LPDIRECT3DRMDEVICE, LPDIRECT3DRMFRAME, SDL_DWORD, SDL_DWORD, SDL_DWORD, SDL_DWORD, LPDIRECT3DRMVIEWPORT *) SDL_PURE;
    SDL_STDMETHOD(CreateWrap)               (SDL_THIS_ D3DRMWRAPTYPE, LPDIRECT3DRMFRAME, D3DVALUE ox, D3DVALUE oy, D3DVALUE oz, D3DVALUE dx, D3DVALUE dy, D3DVALUE dz, D3DVALUE ux, D3DVALUE uy, D3DVALUE uz, D3DVALUE ou, D3DVALUE ov, D3DVALUE su, D3DVALUE sv, LPDIRECT3DRMWRAP *) SDL_PURE;
    SDL_STDMETHOD(CreateUserVisual)         (SDL_THIS_ D3DRMUSERVISUALCALLBACK, SDL_LPVOID lPArg, LPDIRECT3DRMUSERVISUAL *) SDL_PURE;
    SDL_STDMETHOD(LoadTexture)              (SDL_THIS_ const char *, LPDIRECT3DRMTEXTURE *) SDL_PURE;
    SDL_STDMETHOD(LoadTextureFromResource)  (SDL_THIS_ SDL_HRSRC rs, LPDIRECT3DRMTEXTURE *) SDL_PURE;
    SDL_STDMETHOD(SetSearchPath)            (SDL_THIS_ SDL_LPCSTR) SDL_PURE;
    SDL_STDMETHOD(AddSearchPath)            (SDL_THIS_ SDL_LPCSTR) SDL_PURE;
    SDL_STDMETHOD(GetSearchPath)            (SDL_THIS_ SDL_DWORD *size_return, SDL_LPSTR path_return) SDL_PURE;
    SDL_STDMETHOD(SetDefaultTextureColors)  (SDL_THIS_ SDL_DWORD) SDL_PURE;
    SDL_STDMETHOD(SetDefaultTextureShades)  (SDL_THIS_ SDL_DWORD) SDL_PURE;
    SDL_STDMETHOD(GetDevices)               (SDL_THIS_ LPDIRECT3DRMDEVICEARRAY *) SDL_PURE;
    SDL_STDMETHOD(GetNamedObject)           (SDL_THIS_ const char *, LPDIRECT3DRMOBJECT *) SDL_PURE;
    SDL_STDMETHOD(EnumerateObjects)         (SDL_THIS_ D3DRMOBJECTCALLBACK, SDL_LPVOID) SDL_PURE;
    SDL_STDMETHOD(Load)                     (SDL_THIS_ SDL_LPVOID, SDL_LPVOID, SDL_LPIID *, SDL_DWORD, D3DRMLOADOPTIONS, D3DRMLOADCALLBACK, SDL_LPVOID, D3DRMLOADTEXTURECALLBACK, SDL_LPVOID, LPDIRECT3DRMFRAME) SDL_PURE;
    SDL_STDMETHOD(Tick)                     (SDL_THIS_ D3DVALUE) SDL_PURE;
};
#undef SDL_INTERFACE

#define SDL_INTERFACE IDirect3DRM2
SDL_DECLARE_INTERFACE_(IDirect3DRM2, IUnknown)
{
    SDL_IUNKNOWN_METHODS(SDL_PURE);

    SDL_STDMETHOD(CreateObject)
        (SDL_THIS_ SDL_REFCLSID rclsid, SDL_LPUNKNOWN pUnkOuter, SDL_REFIID riid, SDL_LPVOID SDL_FAR* ppv) SDL_PURE;
    SDL_STDMETHOD(CreateFrame)      (SDL_THIS_ LPDIRECT3DRMFRAME, LPDIRECT3DRMFRAME2 *) SDL_PURE;
    SDL_STDMETHOD(CreateMesh)       (SDL_THIS_ LPDIRECT3DRMMESH *) SDL_PURE;
    SDL_STDMETHOD(CreateMeshBuilder)(SDL_THIS_ LPDIRECT3DRMMESHBUILDER2 *) SDL_PURE;
    SDL_STDMETHOD(CreateFace)       (SDL_THIS_ LPDIRECT3DRMFACE *) SDL_PURE;
    SDL_STDMETHOD(CreateAnimation)  (SDL_THIS_ LPDIRECT3DRMANIMATION *) SDL_PURE;
    SDL_STDMETHOD(CreateAnimationSet)(SDL_THIS_ LPDIRECT3DRMANIMATIONSET *) SDL_PURE;
    SDL_STDMETHOD(CreateTexture)    (SDL_THIS_ LPD3DRMIMAGE, LPDIRECT3DRMTEXTURE2 *) SDL_PURE;
    SDL_STDMETHOD(CreateLight)      (SDL_THIS_ D3DRMLIGHTTYPE, D3DCOLOR, LPDIRECT3DRMLIGHT *) SDL_PURE;
    SDL_STDMETHOD(CreateLightRGB)   (SDL_THIS_ D3DRMLIGHTTYPE, D3DVALUE, D3DVALUE, D3DVALUE, LPDIRECT3DRMLIGHT *) SDL_PURE;
    SDL_STDMETHOD(CreateMaterial)   (SDL_THIS_ D3DVALUE, LPDIRECT3DRMMATERIAL *) SDL_PURE;
    SDL_STDMETHOD(CreateDevice)     (SDL_THIS_ SDL_DWORD, SDL_DWORD, LPDIRECT3DRMDEVICE2 *) SDL_PURE;

    /* Create a Windows Device using DirectDraw surfaces */
    SDL_STDMETHOD(CreateDeviceFromSurface)(   SDL_THIS_ SDL_LPGUID lpGUID, LPDIRECTDRAW lpDD, LPDIRECTDRAWSURFACE lpDDSBack, LPDIRECT3DRMDEVICE2 *) SDL_PURE;

    /* Create a Windows Device using D3D objects */
    SDL_STDMETHOD(CreateDeviceFromD3D)(   SDL_THIS_ LPDIRECT3D2 lpD3D, LPDIRECT3DDEVICE2 lpD3DDev, LPDIRECT3DRMDEVICE2 *) SDL_PURE;

    SDL_STDMETHOD(CreateDeviceFromClipper)(   SDL_THIS_ LPDIRECTDRAWCLIPPER lpDDClipper, SDL_LPGUID lpGUID, int width, int height, LPDIRECT3DRMDEVICE2 *) SDL_PURE;

    SDL_STDMETHOD(CreateTextureFromSurface)(SDL_THIS_ LPDIRECTDRAWSURFACE lpDDS, LPDIRECT3DRMTEXTURE2 *) SDL_PURE;

    SDL_STDMETHOD(CreateShadow)(   SDL_THIS_ LPDIRECT3DRMVISUAL, LPDIRECT3DRMLIGHT, D3DVALUE px, D3DVALUE py, D3DVALUE pz, D3DVALUE nx, D3DVALUE ny, D3DVALUE nz, LPDIRECT3DRMVISUAL *) SDL_PURE;
    SDL_STDMETHOD(CreateViewport)(   SDL_THIS_ LPDIRECT3DRMDEVICE, LPDIRECT3DRMFRAME, SDL_DWORD, SDL_DWORD, SDL_DWORD, SDL_DWORD, LPDIRECT3DRMVIEWPORT *) SDL_PURE;
    SDL_STDMETHOD(CreateWrap)(   SDL_THIS_ D3DRMWRAPTYPE, LPDIRECT3DRMFRAME, D3DVALUE ox, D3DVALUE oy, D3DVALUE oz, D3DVALUE dx, D3DVALUE dy, D3DVALUE dz, D3DVALUE ux, D3DVALUE uy, D3DVALUE uz, D3DVALUE ou, D3DVALUE ov, D3DVALUE su, D3DVALUE sv, LPDIRECT3DRMWRAP *) SDL_PURE;
    SDL_STDMETHOD(CreateUserVisual) (SDL_THIS_ D3DRMUSERVISUALCALLBACK, SDL_LPVOID lPArg, LPDIRECT3DRMUSERVISUAL *) SDL_PURE;
    SDL_STDMETHOD(LoadTexture)      (SDL_THIS_ const char *, LPDIRECT3DRMTEXTURE2 *) SDL_PURE;
    SDL_STDMETHOD(LoadTextureFromResource)  (SDL_THIS_ SDL_HMODULE SDL_HMODULE, SDL_LPCTSTR strName, SDL_LPCTSTR strType, LPDIRECT3DRMTEXTURE2 *) SDL_PURE;

    SDL_STDMETHOD(SetSearchPath)    (SDL_THIS_ SDL_LPCSTR) SDL_PURE;
    SDL_STDMETHOD(AddSearchPath)    (SDL_THIS_ SDL_LPCSTR) SDL_PURE;
    SDL_STDMETHOD(GetSearchPath)    (SDL_THIS_ SDL_DWORD *size_return, SDL_LPSTR path_return) SDL_PURE;
    SDL_STDMETHOD(SetDefaultTextureColors)(SDL_THIS_ SDL_DWORD) SDL_PURE;
    SDL_STDMETHOD(SetDefaultTextureShades)(SDL_THIS_ SDL_DWORD) SDL_PURE;

    SDL_STDMETHOD(GetDevices)       (SDL_THIS_ LPDIRECT3DRMDEVICEARRAY *) SDL_PURE;
    SDL_STDMETHOD(GetNamedObject)   (SDL_THIS_ const char *, LPDIRECT3DRMOBJECT *) SDL_PURE;

    SDL_STDMETHOD(EnumerateObjects) (SDL_THIS_ D3DRMOBJECTCALLBACK, SDL_LPVOID) SDL_PURE;

    SDL_STDMETHOD(Load)(   SDL_THIS_ SDL_LPVOID, SDL_LPVOID, SDL_LPIID *, SDL_DWORD, D3DRMLOADOPTIONS, D3DRMLOADCALLBACK, SDL_LPVOID, D3DRMLOADTEXTURECALLBACK, SDL_LPVOID, LPDIRECT3DRMFRAME) SDL_PURE;
    SDL_STDMETHOD(Tick)             (SDL_THIS_ D3DVALUE) SDL_PURE;

    SDL_STDMETHOD(CreateProgressiveMesh)(SDL_THIS_ LPDIRECT3DRMPROGRESSIVEMESH *) SDL_PURE;
};
#undef SDL_INTERFACE

#define SDL_INTERFACE IDirect3DRM3
SDL_DECLARE_INTERFACE_(IDirect3DRM3, IUnknown)
{
    SDL_IUNKNOWN_METHODS(SDL_PURE);

    SDL_STDMETHOD(CreateObject)(SDL_THIS_ SDL_REFCLSID rclsid, SDL_LPUNKNOWN pUnkOuter, SDL_REFIID riid, SDL_LPVOID SDL_FAR* ppv) SDL_PURE;
    SDL_STDMETHOD(CreateFrame)      (SDL_THIS_ LPDIRECT3DRMFRAME3, LPDIRECT3DRMFRAME3 *) SDL_PURE;
    SDL_STDMETHOD(CreateMesh)       (SDL_THIS_ LPDIRECT3DRMMESH *) SDL_PURE;
    SDL_STDMETHOD(CreateMeshBuilder)(SDL_THIS_ LPDIRECT3DRMMESHBUILDER3 *) SDL_PURE;
    SDL_STDMETHOD(CreateFace)       (SDL_THIS_ LPDIRECT3DRMFACE2 *) SDL_PURE;
    SDL_STDMETHOD(CreateAnimation)  (SDL_THIS_ LPDIRECT3DRMANIMATION2 *) SDL_PURE;
    SDL_STDMETHOD(CreateAnimationSet)(SDL_THIS_ LPDIRECT3DRMANIMATIONSET2 *) SDL_PURE;
    SDL_STDMETHOD(CreateTexture)    (SDL_THIS_ LPD3DRMIMAGE, LPDIRECT3DRMTEXTURE3 *) SDL_PURE;
    SDL_STDMETHOD(CreateLight)      (SDL_THIS_ D3DRMLIGHTTYPE, D3DCOLOR, LPDIRECT3DRMLIGHT *) SDL_PURE;
    SDL_STDMETHOD(CreateLightRGB)   (SDL_THIS_ D3DRMLIGHTTYPE, D3DVALUE, D3DVALUE, D3DVALUE, LPDIRECT3DRMLIGHT *) SDL_PURE;
    SDL_STDMETHOD(CreateMaterial)   (SDL_THIS_ D3DVALUE, LPDIRECT3DRMMATERIAL2 *) SDL_PURE;
    SDL_STDMETHOD(CreateDevice)     (SDL_THIS_ SDL_DWORD, SDL_DWORD, LPDIRECT3DRMDEVICE3 *) SDL_PURE;

    /* Create a Windows Device using DirectDraw surfaces */
    SDL_STDMETHOD(CreateDeviceFromSurface)(   SDL_THIS_ SDL_LPGUID lpGUID, LPDIRECTDRAW lpDD, LPDIRECTDRAWSURFACE lpDDSBack, SDL_DWORD dwFlags, LPDIRECT3DRMDEVICE3 * ) SDL_PURE;

    /* Create a Windows Device using D3D objects */
    SDL_STDMETHOD(CreateDeviceFromD3D)(   SDL_THIS_ LPDIRECT3D2 lpD3D, LPDIRECT3DDEVICE2 lpD3DDev, LPDIRECT3DRMDEVICE3 * ) SDL_PURE;

    SDL_STDMETHOD(CreateDeviceFromClipper) (   SDL_THIS_ LPDIRECTDRAWCLIPPER lpDDClipper, SDL_LPGUID lpGUID, int width, int height, LPDIRECT3DRMDEVICE3 *) SDL_PURE;

    SDL_STDMETHOD(CreateTextureFromSurface)(SDL_THIS_ LPDIRECTDRAWSURFACE lpDDS, LPDIRECT3DRMTEXTURE3 *) SDL_PURE;

    SDL_STDMETHOD(CreateShadow) (   SDL_THIS_ SDL_LPUNKNOWN, LPDIRECT3DRMLIGHT, D3DVALUE px, D3DVALUE py, D3DVALUE pz, D3DVALUE nx, D3DVALUE ny, D3DVALUE nz, LPDIRECT3DRMSHADOW2 *) SDL_PURE;
    SDL_STDMETHOD(CreateViewport)(   SDL_THIS_ LPDIRECT3DRMDEVICE3, LPDIRECT3DRMFRAME3, SDL_DWORD, SDL_DWORD, SDL_DWORD, SDL_DWORD, LPDIRECT3DRMVIEWPORT2 * ) SDL_PURE;
    SDL_STDMETHOD(CreateWrap) (   SDL_THIS_ D3DRMWRAPTYPE, LPDIRECT3DRMFRAME3, D3DVALUE ox, D3DVALUE oy, D3DVALUE oz, D3DVALUE dx, D3DVALUE dy, D3DVALUE dz, D3DVALUE ux, D3DVALUE uy, D3DVALUE uz, D3DVALUE ou, D3DVALUE ov, D3DVALUE su, D3DVALUE sv, LPDIRECT3DRMWRAP *) SDL_PURE;
    SDL_STDMETHOD(CreateUserVisual) (SDL_THIS_ D3DRMUSERVISUALCALLBACK, SDL_LPVOID lPArg, LPDIRECT3DRMUSERVISUAL *) SDL_PURE;
    SDL_STDMETHOD(LoadTexture)      (SDL_THIS_ const char *, LPDIRECT3DRMTEXTURE3 *) SDL_PURE;
    SDL_STDMETHOD(LoadTextureFromResource)  (SDL_THIS_ SDL_HMODULE SDL_HMODULE, SDL_LPCTSTR strName, SDL_LPCTSTR strType, LPDIRECT3DRMTEXTURE3 *) SDL_PURE;

    SDL_STDMETHOD(SetSearchPath)    (SDL_THIS_ SDL_LPCSTR) SDL_PURE;
    SDL_STDMETHOD(AddSearchPath)    (SDL_THIS_ SDL_LPCSTR) SDL_PURE;
    SDL_STDMETHOD(GetSearchPath)    (SDL_THIS_ SDL_DWORD *size_return, SDL_LPSTR path_return) SDL_PURE;
    SDL_STDMETHOD(SetDefaultTextureColors)(SDL_THIS_ SDL_DWORD) SDL_PURE;
    SDL_STDMETHOD(SetDefaultTextureShades)(SDL_THIS_ SDL_DWORD) SDL_PURE;

    SDL_STDMETHOD(GetDevices)       (SDL_THIS_ LPDIRECT3DRMDEVICEARRAY *) SDL_PURE;
    SDL_STDMETHOD(GetNamedObject)   (SDL_THIS_ const char *, LPDIRECT3DRMOBJECT *) SDL_PURE;

    SDL_STDMETHOD(EnumerateObjects) (SDL_THIS_ D3DRMOBJECTCALLBACK, SDL_LPVOID) SDL_PURE;

    SDL_STDMETHOD(Load)(   SDL_THIS_ SDL_LPVOID, SDL_LPVOID, SDL_LPIID *, SDL_DWORD, D3DRMLOADOPTIONS, D3DRMLOADCALLBACK, SDL_LPVOID, D3DRMLOADTEXTURE3CALLBACK, SDL_LPVOID, LPDIRECT3DRMFRAME3 ) SDL_PURE;
    SDL_STDMETHOD(Tick)             (SDL_THIS_ D3DVALUE) SDL_PURE;

    SDL_STDMETHOD(CreateProgressiveMesh)(SDL_THIS_ LPDIRECT3DRMPROGRESSIVEMESH *) SDL_PURE;

    /* Used with IDirect3DRMObject2 */
    SDL_STDMETHOD(RegisterClient)   (SDL_THIS_ SDL_REFGUID rguid, SDL_LPDWORD lpdwID) SDL_PURE;
    SDL_STDMETHOD(UnregisterClient) (SDL_THIS_ SDL_REFGUID rguid) SDL_PURE;

    SDL_STDMETHOD(CreateClippedVisual) (SDL_THIS_ LPDIRECT3DRMVISUAL, LPDIRECT3DRMCLIPPEDVISUAL *) SDL_PURE;
    SDL_STDMETHOD(SetOptions) (SDL_THIS_ SDL_DWORD);
    SDL_STDMETHOD(GetOptions) (SDL_THIS_ SDL_LPDWORD);
};
#undef SDL_INTERFACE

SDL_STDAPI Direct3DRMCreate(LPDIRECT3DRM SDL_FAR *lplpDirect3DRM);

#endif // SDL_D3DRM_H
